import { CommandNotFound, Command, CommandMessage, Guard, Description } from "@typeit/discord";
import { NotBot } from "../guards/NotABot.guard";
import { Logger } from "../services/logger.service";

interface exampleArgs {
    exampleType: string;
}

export abstract class Example {

    logger = Logger.prototype.getInstance();

    @Command("example :exampleType")
    @Description("Example command. Modify where necessary.")
    @Guard(NotBot)
    async example(command: CommandMessage<exampleArgs>): Promise<void> {
        this.logger.info("Sending Example");
        const { exampleType } = command.args;

        command.reply("Example Message").then((messageSent) => {
            this.logger.info(`Sent Info : message id ${messageSent.id}`);
        });
    }
}